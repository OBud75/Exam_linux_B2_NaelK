if/else permet de tester plusieurs conditions individuelles avec des expressions booléennes, tandis que 
switch compare une seule expression à plusieurs valeurs possibles, rendant le code 
plus lisible lorsqu'il y a plusieurs cas à tester.


Ce n'est pas vraiment une question de lisibilité mais d'usage:
Un if/else fait tous les tests de manière linéaire jusqu'à trouver un résultat correct ou arriver à la fin des tests
alors que le case ne fait que le test nécessaire en chargant en mémoire les adresses à l'image d'un dictionnaire.

Dans les faits on aura tendance à utiliser un switch quand tous les cas on à peu près autant de chance d'arriver,
Alors qu'avec un if/else if on vérifie des conditions spécifiques (de la plus probable à la moins probable).

Niveau algo, sauf optimisation spécifique, if/else if/else sera linéaire O(n)
Pour un switch pareil cela dépend de l'implémentation du compilateur mais à priori il va générer une jump table et l'algo sera donc en O(1), similiaire à une hash table.
